# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @auth on FIELD_DEFINITION | OBJECT

scalar Time

scalar Map

scalar Any

scalar JSON

scalar LargeInt

type Member{
    id:               Int! 
    firstName:        String!
    lastName:         String!
    email:            String!
    mobileNo:         String!
    isActive:         Int!
    profileImage:     String!
    profileImagePath: String!
    createdOn:        Time! 
    createdBy:        Int!
    modifiedOn:       Time 
    modifiedBy:       Int       
    memberGroupId:    Int!
    group:            [MemberGroup!] 
}

type MemberGroup{
	id:           Int! 
	name:         String!
	slug:         String!
	description:  String!
	isActive:     Int!
	createdOn:    Time! 
	createdBy:    Int!
	modifiedOn:   Time 
	modifiedBy:   Int 
}

type Channel{
	id:                  Int!
	channelName:         String!
	channelDescription:  String!
	slugName:            String!
	fieldGroupId:        Int!
	isActive:            Int!
	createdOn:           Time!
	createdBy:           Int!
	modifiedOn:          Time          
	modifiedBy:          Int                                              
}

type ChannelDetails{
    channellist: [Channel!]!
    count:       Int!
}

type ChannelEntriesDetails{
    channelEntriesList: [ChannelEntries!]!
    count:              Int!
}

type ChannelEntries{
	id:                   Int!
	title:                String! 
	slug:                 String! 
	description:          String!
	userId:               Int!
	channelId:            Int!
	status:               Int!
	isActive:             Int!
	createdOn:            Time!
	createdBy:            Int!
	modifiedBy:           Int     
	modifiedOn:           Time 
	coverImage:           String!
	thumbnailImage:       String!
	metaTitle:            String!
	metaDescription:      String!
	keyword:              String!
	categoriesId:         String!
	relatedArticles:      String!
	featuredEntry:        Int!
	viewCount:            Int!
	categories:           [[Category!]!]!
	additionalFields:     AdditionalFields
	authorDetails:        Author!
	memberProfile:        [MemberProfile!]
}

type Author{
	AuthorId:             Int! 
	FirstName:            String!
	LastName:             String!
	Email:                String!
	MobileNo:             String
	IsActive:             Int
	ProfileImagePath:     String
	CreatedOn:            Time!
	CreatedBy:            Int!      
}

type MemberProfile{
	id:                Int
	memberId:          Int
	profileName:       String
	profileSlug:       String
	profilePage:       String
	memberDetails:     Any
	companyName:       String
	companyLocation:   String
	companyLogo:       String
	about:             String
	seoTitle:          String
	seoDescription:    String
	seoKeyword:        String
	linkedin:          String
	twitter:           String
	website:           String
	createdBy:         Int
	createdOn:         Time
	modifiedOn:        Time 
	modifiedBy:        Int 
	claimStatus:       Int      
}

type Category{
	id:                 Int!
	categoryName:       String!
	categorySlug:       String!
	description:        String!
	imagePath:          String!
	createdOn:          Time!
	createdBy:          Int!
	modifiedOn:         Time 
	modifiedBy:         Int       
	parentId:           Int!
}

type SpaceDetails{
	spacelist:      [Space!]!
	count:          Int!
}

type Space{
	id:                   Int!
	spaceName:            String!
	spaceSlug:            String!
	spaceDescription:     String!
	imagePath:            String!
	languageId:           Int!
	createdOn:            Time!
	createdBy:            Int!
	modifiedOn:           Time        
	modifiedBy:           Int 
	categoryId:           Int!                                                                                                
	categories:           [Category!]!                                                                               
}

type PageAndPageGroups{
	pages:         [Page!]!
	subpages:      [SubPage!]!
	pagegroups:    [PageGroup!]!
}

type Page{
    id:               Int!
	pageName:         String!
	content:          String!
	pagegroupId:      Int!
	orderIndex:       Int!
	parentId:         Int!
	status:           String!
	createdOn:        Time!
	created_by:       Int!
	modifiedOn:       Time
	modifiedBy:       Int
}

type SubPage{
    id:             Int!
    subpageName:    String!
    conent:         String!
    parentId:       Int!
    pageGroupId:    Int!
    orderIndex:     Int!
    status:         String!
    createdOn:      Time!
    created_by:     Int!
    modifiedOn:     Time
    modifiedBy:     Int
}

type PageGroup{
    id:             Int!
    pagegroupName:  String!
    orderIndex:     Int!
	createdOn:      Time!
    created_by:     Int!
    modifiedOn:     Time
    modifiedBy:     Int
}

type CategoriesList{
	categories:   [Category!]!
	count:        Int! 
}

type AdditionalFields{
	sections:   [Section!]
	fields:     [Field!]
}

type Section{
	sectionId:         Int
	sectionName:       String!
	sectionTypeId:     Int!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
	orderIndex:        Int!
}

type Field{
	fieldId:           Int!
	fieldName:         String!
	fieldTypeId:       Int!
	mandatoryField:    Int!
	optionExist:       Int!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
	fieldDesc:         String!
	orderIndex:        Int!
	imagePath:         String!
	datetimeFormat:    String
	timeFormat:        String
	sectionParentId:   Int
	characterAllowed:  Int
	fieldTypeName:     String!
	fieldValue:        FieldValue
	fieldOptions:      [FieldOptions!]
}

type FieldValue{
	id:                Int!
	fieldValue:        String!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
}

type FieldOptions{
	id:                Int!
	optionName:        String!
	optionValue:       String!
	createdOn:         Time!
	createdBy:         Int!
	modifiedOn:        Time
	modifiedBY:        Int
}

type Query{
    channelList(limit: Int!,offset: Int!): ChannelDetails! @auth
	channelDetail(channelId: Int!): Channel! @auth
    channelEntriesList(channelId: Int,categoryId: Int,limit: Int!,offset: Int!, title: String): ChannelEntriesDetails! @auth
	channelEntryDetail(categoryId: Int,channelId: Int,channelEntryId: Int,slug: String): ChannelEntries! @auth
	spaceList(limit: Int!,offset: Int!): SpaceDetails! @auth
	spaceDetails(spaceId: Int!): Space! @auth
	PagesAndPageGroupsUnderSpace(spaceId: Int!): PageAndPageGroups! @auth
	categoriesList(limit: Int,offset: Int,categoryGroupId: Int,hierarchyLevel: Int): CategoriesList! @auth
}


type Mutation{
    memberLogin(email: String!): Boolean!
	verifyMemberOtp(email: String!, otp: Int!): String!
    memberRegister(input: MemberDetails!): Boolean!
    memberUpdate(memberdata: MemberDetails!): Boolean! @auth
	memberProfileUpdate(profiledata: ProfileData!,entryId: Int!,updateExactMemberProfileOnly: Boolean!):Boolean! @auth
	memberclaimnow(input: ClaimData!,entryId: Int!): Boolean! @auth
}

input MemberDetails{
    firstName:        String!
    lastName:         String!
    mobile:           String!
    email:            String!
    password:         String!
    isActive:         Int
    profileImage:     String
    profileImagePath: String
    username:         String
    groupId:          Int 
}

input ProfileData{
	website:         String
	twitter:         String
	linkedin:        String
	memberProfile:   JSON!
}

input ClaimData{
	profileName:     String!
	workMail:        String!
    companyNumber:   LargeInt!
	personName:      String!
}






