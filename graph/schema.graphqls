# GraphQL schema example
#
# https://gqlgen.com/getting-started/

directive @auth on FIELD_DEFINITION | OBJECT

scalar Time

scalar Map

type Member{
    id:               Int! 
    uuid:             String!
    firstName:        String!
    lastName:         String!
    email:            String!
    mobileNo:         String!
    isActive:         Int!
    profileImage:     String!
    profileImagePath: String!
    lastLogin:        Int!
    isDeleted:        Int!
    deletedOn:        Time 
    deletedBy:        Int      
    createdOn:        Time! 
    createdDate:      String    
    createdBy:        Int!
    modifiedOn:       Time 
    modifiedBy:       Int       
    memberGroupId:    Int!
    group:            [MemberGroup!] 
    password:         String!
    username:         String!    
    otp:              Int       
    otpExpiry:        Time 
}

type MemberGroup{
	id:           Int! 
	name:         String!
	slug:         String!
	description:  String!
	isActive:     Int!
	isDeleted:    Int!
	createdOn:    Time! 
	createdBy:    Int!
	modifiedOn:   Time 
	modifiedBy:   Int      
	dateString:   String   
}

type TblChannel{
	id:                  Int!
	channelName:         String!
	channelDescription:  String!
	slugName:            String!
	fieldGroupId:        Int!
	isActive:            Int!
	isDeleted:           Int!
	createdOn:           Time!
	createdBy:           Int!
	modifiedOn:          Time          
	modifiedBy:          Int                                              
}

type ChannelDetails{
    channellist: [TblChannel!]!
    count:       Int!
}

type ChannelEntryDetails{
    channelEntryList: ChannelEntries
    channelEntry: TblChannelEntries
}

type ChannelEntries{
    channelEntryList: [TblChannelEntries!]!
    count:            Int!
}

type TblChannelEntries{
	id:                   Int!
	title:                String! 
	slug:                 String! 
	description:          String!
	userId:               Int!
	channelId:            Int!
	status:               Int!
	isActive:             Int!
	isDeleted:            Int! 
	deletedBy:            Int       
	deletedOn:            Time 
	createdOn:            Time!
	createdBy:            Int!
	modifiedBy:           Int     
	modifiedOn:           Time 
	coverImage:           String!
	thumbnailImage:       String!
	metaTitle:            String!
	metaDescription:      String!
	keyword:              String!
	categoriesId:         String!
	relatedArticles:      String!
	categories:           [[TblCategory!]!]!
}

type TblCategory{
	id:                 Int!
	categoryName:       String!
	categorySlug:       String!
	description:        String!
	imagePath:          String!
	createdOn:          Time!
	createdBy:          Int!
	modifiedOn:         Time 
	modifiedBy:         Int       
	isDeleted:          Int!
	deletedOn:          Time 
	deletedBy:          Int     
	parentId:           Int!
	childCategories:    [TblCategory!]
}

type SpaceDetails{
	spacelist:      [Space!]!
	count:          Int!
}

type Space{
	id:                   Int!
	spaceName:            String!
	spaceSlug:            String!
	spaceDescription:     String!
	imagePath:            String!
	languageId:           Int!
	createdOn:            Time!
	createdBy:            Int!
	modifiedOn:           Time        
	modifiedBy:           Int 
	isDeleted:            Int!                        
	deletedOn:            Time               
	deletedBy:            Int 
	categoryId:           Int!                                                                                                
	categories:           [TblCategory!]!                                                                               
}

type PageAndPageGroups{
	pages:         [Page!]!
	subpages:      [SubPage!]!
	pagegroups:    [PageGroup!]!
}

type Page{
    id:               Int!
	pageName:         String!
	content:          String!
	pagegroupId:      Int!
	orderIndex:       Int!
	parentId:         Int!
	status:           String!
	createdOn:        Time!
	created_by:       Int!
	modifiedOn:       Time
	modifiedBy:       Int
	isDeleted:        Int!
	deletedOn:        Time
	deletedBy:        Int
}

type SubPage{
    id:             Int!
    subpageName:    String!
    conent:         String!
    parentId:       Int!
    pageGroupId:    Int!
    orderIndex:     Int!
    status:         String!
    createdOn:      Time!
    created_by:     Int!
    modifiedOn:     Time
    modifiedBy:     Int
	isDeleted:      Int!
	deletedOn:      Time
	deletedBy:      Int
}

type PageGroup{
    id:             Int!
    pagegroupName:  String!
    orderIndex:     Int!
	createdOn:      Time!
    created_by:     Int!
    modifiedOn:     Time
    modifiedBy:     Int
	isDeleted:      Int!
	deletedOn:      Time
	deletedBy:      Int
}

type CategoriesList{
	categories:   [TblCategory!]!
	count:        Int! 
}

type Query{
    channelList(limit: Int!,offset: Int!): ChannelDetails! @auth
	channelDetail(channelId: Int!): TblChannel! @auth
    channelEntriesList(channelId: Int,channelEntryId: Int,categoryId: Int,limit: Int,offset: Int): ChannelEntryDetails! @auth
	spaceList(limit: Int!,offset: Int!): SpaceDetails! @auth
	spaceDetails(spaceId: Int!): Space! @auth
	PagesAndPageGroupsUnderSpace(spaceId: Int!): PageAndPageGroups! @auth
	categoriesList(limit: Int!,offset: Int!): CategoriesList! @auth
}

type Mutation{
    memberLogin(input: LoginCredentials!): String!
    memberRegister(input: MemberDetails!): Boolean!
    memberUpdate(memberdata: MemberDetails!): Boolean! @auth
}

input LoginCredentials{
    email: String!
    password: String!
}

input MemberDetails{
    firstName:        String!
    lastName:         String!
    mobile:           String!
    email:            String!
    password:         String!
    isActive:         Int
    profileImage:     String
    profileImagePath: String
    username:         String
    groupId:          Int 
}






